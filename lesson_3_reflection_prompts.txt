When would you want to use a remote repository rather than keeping all your work local?

    When I want to share my work with others.
    When there are multiple people working on the same project.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    Someone might push something that would break what I'm doing (conflicts) without knowing it and I can't finish my work if I have to keep up with those changes.
    To pull changes manually allows finishing local implementations first and dealing with ongoing changes later.

Describe the differences between forks, clones, and branches.  When would you use one instead of another?

    branch happens inside the repository and it is useful when working on a feature that I don't want to mess up the main branch.

    clone is to make a copy of a repository where it won't affect the original at all unless it is pushed back

    fork is like clone to make a copy of a repository on GitHub but without being able to modify the original. And fork also provide more information on the cloning, such as how many times the repository has been forked.

What is the benefit of having a copy of the last known state of the remote stored locally?

    I'll be able to know where the local and the remote diverge.

How would you collaborate without using Git or GitHub?  What would be easier, and what would be harder?

    I'll probably use mercurial with tortoiseHg workbench. It would be easy enough to maintain. However, it is hard to trace who owns a copy of a repository and it doesn't provide a direct way of text editing and also no functionality like the pull request to help peer review easier.

When would you want to make changes in a separate branch rather than directly in master?  What benefits does each approach have?

    When changes are going to be big enough that would impact the original architecture in master, when the feature needs a great amount of time to develop and maybe affected by other's latest changes, or when there are multiple people working on the same set of classes, it is better to make changes in a separate branch.
    To make direct change in master make it quickly avaialbe to everyone and without the need of resolving conflicts.
